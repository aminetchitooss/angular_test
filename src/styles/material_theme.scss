// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

@function createPalette($color: "primary") {
  $palette: (
    50: var(--#{$color}-50),
    100: var(--#{$color}-100),
    200: var(--#{$color}-200),
    300: var(--#{$color}-300),
    400: var(--#{$color}-400),
    500: var(--#{$color}-500),
    600: var(--#{$color}-600),
    700: var(--#{$color}-700),
    800: var(--#{$color}-800),
    900: var(--#{$color}-900),
    A100: var(--#{$color}-A100),
    A200: var(--#{$color}-A200),
    A400: var(--#{$color}-A400),
    A700: var(--#{$color}-A70),
    contrast: (
      50: #000000,
      100: #000000,
      200: #000000,
      300: #000000,
      400: #000000,
      500: #ffffff,
      600: #ffffff,
      700: #ffffff,
      800: #ffffff,
      900: #ffffff,
      A100: #000000,
      A200: #000000,
      A400: #000000,
      A700: #000000
    )
  );

  @return $palette;
}

$primary-palette: createPalette("primary");
$accent-palette: createPalette("accent");
$warn-palette: createPalette("danger");

/* For use in src/lib/core/theming/_palette.scss */

$myProject-primary: mat.define-palette($primary-palette);
$myProject-accent: mat.define-palette($accent-palette);

// The warn palette is optional (defaults to red).
$myProject-warn: mat.define-palette($warn-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$myProject-theme: mat.define-light-theme(
  (
    color: (
      primary: $myProject-primary,
      accent: $myProject-accent,
      warn: $myProject-warn
    )
  )
);
// $myProject-dark-theme: mat.define-dark-theme(
//   (
//     color: (
//       primary: $myProject-primary,
//       accent: $myProject-accent,
//       warn: $myProject-warn
//     )
//   )
// );

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

/* You can add global styles to this file, and also import other style files */

@include mat.all-component-themes($myProject-theme);
// .light-theme {
//   @include mat.all-component-themes($myProject-theme);
// }

// .dark-theme {
//   @include mat.all-component-colors($myProject-dark-theme);
// }

.mat-form-field-appearance-outline {
  .mat-form-field-outline {
    background-color: var(--bg-nav-color);
    border-radius: 6px;
  }
  &.mat-form-field-disabled {
    .mat-form-field-outline {
      background-color: var(--gray-50);
    }
  }
}

.grayField .enable-gray {
  .mat-form-field-appearance-outline .mat-form-field-outline {
    background-color: var(--bg-gray-color);
  }
}

.header-search,
.autosearch {
  .mat-form-field-appearance-outline {
    .mat-form-field-infix {
      padding: 0.8em 0;
      border-width: 8px;
    }

    .mat-form-field-wrapper {
      margin: 0 !important;
      padding-bottom: 1rem;
    }
    .mat-form-field-flex {
      padding: 0 1.5rem !important;
    }
  }
  &:not(.plain) {
    .mat-form-field-appearance-outline {
      .mat-form-field-outline {
        box-shadow: var(--shadow-under);
        height: 48px;
      }
    }
  }
  &.plain {
    .mat-form-field-appearance-outline {
      .mat-form-field-infix {
        padding: 0.8em 0;
        border-width: 5px;
      }
    }
  }
}

.selectSmall {
  .mat-form-field-appearance-outline {
    .mat-form-field-outline {
      height: initial;
    }
    .mat-form-field-wrapper {
      padding: 0;
      margin-bottom: 0;
      margin-top: 0;
    }
    .mat-form-field-infix {
      padding: 18px 0;
      border-width: 2px;
    }
    .mat-select-arrow-wrapper {
      transform: initial;
    }
  }

  .mat-form-field-type-mat-select .mat-form-field-flex {
    height: 52px;
  }
}
.login {
  .mat-form-field-infix {
    border-width: 5px;
    padding: 1em 0 1em 0 !important;
  }
  .mat-error {
    white-space: nowrap;
  }
}
.mat-error {
  position: relative;
  right: 9px;
}
.mat-form-field-appearance-outline .mat-form-field-infix {
  padding: 0.5em 0 1em 0;
}
.jauges {
  .mat-form-field {
    .mat-form-field-flex {
      padding-right: 2rem;
    }
    &.peopleMax {
      .mat-form-field-flex {
        padding-right: 6rem;
      }
    }
  }
}

.field-title {
  font-style: normal;
  font-weight: normal;
  font-size: 0.875rem;
  line-height: 20px;
}
